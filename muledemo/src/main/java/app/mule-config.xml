<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns="http://www.mulesoft.org/schema/mule/core"
      xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xmlns:http="http://www.mulesoft.org/schema/mule/http"
      xmlns:vm="http://www.mulesoft.org/schema/mule/vm"
      xmlns:pattern="http://www.mulesoft.org/schema/mule/pattern"
      xsi:schemaLocation="
        http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
        http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
        http://www.mulesoft.org/schema/mule/pattern http://www.mulesoft.org/schema/mule/pattern/current/mule-pattern.xsd
        http://www.mulesoft.org/schema/mule/vm http://www.mulesoft.org/schema/mule/vm/current/mule-vm.xsd">

    <description>
        This configuration uses an HTTP endpoint to receive requests.
    </description>

    <!--
    To invoke the Hello service over HTTP, hit the following URL in your browser:

        http://localhost:8888?name=Ross
    -->

    <custom-transformer class="org.mule.example.hello.StringToNameString" name="StringToNameString" doc:name="Java"/>
    <custom-transformer class="org.mule.example.hello.NameStringToChatString" name="NameStringToChatString"
                        doc:name="Java"/>
    <custom-transformer class="org.mule.example.hello.ChatStringToString" name="ChatStringToString" doc:name="Java"/>
    <custom-transformer class="org.mule.example.hello.HttpRequestToNameString" name="HttpRequestToNameString"
                        doc:name="Java"/>
    <custom-transformer class="org.mule.example.hello.ExceptionToString" name="ExceptionToString" doc:name="Java"/>
    <custom-transformer class="org.mule.transformer.simple.ObjectToString" name="ObjectToString" doc:name="Java"/>

    <flow name="time-flow" doc:name="display time now">
        <!--<http:inbound-endpoint exchange-pattern="request-response" address="http://localhost:9081"/>-->
        <http:inbound-endpoint exchange-pattern="request-response" host="localhost" port="9081"/>
        <component class="com.ggd543.demo.TimeComponent">
            <no-arguments-entry-point-resolver>
                <include-entry-point method="getDate"/>
            </no-arguments-entry-point-resolver>
        </component>
        <object-to-string-transformer/>
    </flow>

    <flow name="baidu-flow" doc:name="baidu flom">
        <http:inbound-endpoint address="http://127.0.0.1:9999/baidu" exchange-pattern="request-response">
        </http:inbound-endpoint>
        <http:outbound-endpoint address="http://www.baidu.com" exchange-pattern="request-response"/>
        <copy-properties propertyName="*"/>
    </flow>

    <flow name="qq-flow" doc:name="qq flom">
        <http:inbound-endpoint address="http://127.0.0.1:9999/qq" exchange-pattern="request-response">
        </http:inbound-endpoint>
        <http:outbound-endpoint address="http://www.qq.com" exchange-pattern="request-response"/>
        <copy-properties propertyName="*"/>
    </flow>

    <flow name="HelloWorld" doc:name="HelloWorld">
        <http:inbound-endpoint exchange-pattern="request-response" host="localhost" port="8888"
                               doc:name="Http Endpoint"/>
        <message-filter doc:name="Filter favicon">
            <not-filter>
                <wildcard-filter pattern="/favicon.ico" caseSensitive="true"/>
            </not-filter>
        </message-filter>
        <transformer ref="HttpRequestToNameString" doc:name="Transform Http Request to NameString"/>
        <flow-ref name="HelloWorldSubFlow" doc:name="Process request"/>
        <catch-exception-strategy>
            <logger level="ERROR" message="#[payload]" doc:name="Log Error"/>
        </catch-exception-strategy>
    </flow>

    <flow name="HelloWorldVm" doc:name="HelloWorldVm">
        <vm:inbound-endpoint exchange-pattern="request-response" path="greeter" doc:name="VM Endpoint"/>
        <transformer ref="StringToNameString" doc:name="Transformer String to NameString"/>
        <flow-ref name="HelloWorldSubFlow" doc:name="Process request"/>
    </flow>

    <sub-flow name="HelloWorldSubFlow">
        <component class="org.mule.example.hello.Greeter" doc:name="Greeter Component"/>
        <choice doc:name="Choice">
            <when expression="payload instanceof org.mule.example.hello.NameString" evaluator="groovy">
                <processor-chain>
                    <flow-ref name="ChitChat" doc:name="Process ChitChat"/>
                </processor-chain>
            </when>
            <when expression="payload instanceof java.lang.Exception" evaluator="groovy">
                <processor-chain>
                    <logger level="ERROR" message="#[payload]" doc:name="Error Log"/>
                </processor-chain>
            </when>
        </choice>
    </sub-flow>

    <sub-flow name="ChitChat" doc:name="ChitChat">
        <transformer ref="NameStringToChatString" doc:name="Transform NameString to ChatString"/>
        <component class="org.mule.example.hello.ChitChatter" doc:name="ChitChatter component"/>
        <transformer ref="ChatStringToString" doc:name="Transform ChatString to String"/>
    </sub-flow>

    <flow name="before-proxy-flow">
        <http:inbound-endpoint host="0.0.0.0" port="9696" exchange-pattern="request-response"/>
        <echo-component></echo-component>
        <!--<vm:outbound-endpoint address="vm://baidu"/>-->
        <http:outbound-endpoint address="http://localhost:9004"/>
    </flow>

    <pattern:http-proxy  name="baidu-proxy" inboundAddress="vm://baidu" outboundAddress="http://www.baidu.com">
    </pattern:http-proxy>
    <pattern:http-proxy  name="baidu-proxy-2" inboundAddress="http://localhost:9004" outboundAddress="http://www.baidu.com" >
    </pattern:http-proxy>


</mule>
